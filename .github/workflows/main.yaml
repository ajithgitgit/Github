name: CI/CD Pipeline with Security & Compliance

on:
  push:
    branches:
      - main  # Trigger pipeline when code is pushed to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for the job

    steps:
    # Step 1: Checkout code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (to build multi-platform images)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Store DockerHub username in GitHub Secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Store DockerHub password in GitHub Secrets

    # Step 4: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t myapp:$GITHUB_SHA .
        docker tag myapp:$GITHUB_SHA rtx3osie/myapp:$GITHUB_SHA
        docker push rtx3osie/myapp:$GITHUB_SHA  # Push image to Docker Hub


    # Step 5: Run Static Application Security Testing (SAST) - Example with SonarQube
    # You can enable SAST here if you need

    # Step 6: Run Container Vulnerability Scanning (Trivy)
    - name: Run Trivy container scan
      run: |
        trivy image mydockerhub/myapp:$GITHUB_SHA

    # Step 7: Set up AWS CLI (to interact with AWS services)
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install
    # Step 8: Set up kubectl for EKS
    - name: Set up kubectl
      uses: azure/k8s-set-context@v1 # Change to v1 (stable version)
      with:
        cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}  # EKS Cluster Name (stored in Secrets)
        region: ${{ secrets.AWS_REGION }}             # AWS Region (stored in Secrets)

    # Step 9: Helm Deploy to Kubernetes on EKS
    - name: Helm Deploy to Kubernetes
      run: |
        helm upgrade --install myapp ./helm-chart --set image.tag=$GITHUB_SHA
